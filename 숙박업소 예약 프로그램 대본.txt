발표 대본 샘플 ~~~

1. 인사
안녕하세요. 스프링 프레임워크를 활용한 web개발 프로젝트
숙박 예약 프로그램 HORE 개발을 진행한 개발자 오승호 입니다.

2. 목차소개   

3. 개요소개
첫번째 목차인 프로젝트 개요부터 설명 드리겠습니다.

개발 목표로는 첫번째로 스프링 프레임워크를 이용한 개발 진행 경험
두번째로는 DI와 MVC패턴을 이해하고 숙련도를 쌓는것,
세번째로는 클라이언트와 컨트롤러 간의 흐름을 이해하고 경험하는 것
네번째는 저희가 사용한 데이터를 관리하고 또 그 데이터를 시각화 또는 사용 하는 것
다섯번째는 AI 및 빅데이터 활용을 위해 Python 서버 연동
여섯번째는 session을 활용해 데이터 이동 활용
마지막으로는 인터페이스를 활용한 상속을 연습함으로써 코드를 재사용하고 유지보수가 용이하도록 설계하는 것이 개발 목표였습니다

프로젝트 제목은 '숙박 업소 예약 프로그램 구현 프로젝트' 이고 기간은 6월 28일부터 7월 21로 진행했습니다.
일정은 화면에 나와있는 대로 진행했습니다.
개발환경은 화면 설명

개발도구는 프론트 부분에선 HTML , BootStrap , Jquery , AJAX 를 사용했고 HTML은 각 화면 출력으로 사용했고
BootStrap은 HTML화면 스타일 및 동작 적용에 사용했고 , Jquery 는 HTML, Element 제어하는 부분과
지도API를 사용해 숙소의 위치를 알리는 데에 사용했습니다.
AJAX는 첫번째로 회원가입 시 아이디 중복 여부 검사에 사용했고 두번째로는 로그인 시 아이디 비밀번호 확인 검사,
세번째로는 예약 날짜 선택 시 해당 날짜에 예약 가능한 숙소만 출력 하는 부분에 사용했습니다.
서버로는 Tomcat과 Flask를 사용했는데요. Tomcat 서버는 클라이언트와 컨트롤러, DB서버 간 통신에 사용되었고
Flask는 컨트롤러와 Python 간의 통신에 사용되었습니다.
백엔드 부분에서는 Spring, MyBatis, JSP 를 사용했는데요. Spring Framework로 DI와 MVC패턴을 이용해 개발을 진행하였고,
MyBatis로 객체와 관계형 DB의 데이터를 자동 매핑 부분에 사용해 관리가 쉽도록 했습니다.
JSP는 사용자의 입력 데이터에 맞게 view를 구성하는데 사용했습니다.
DB로는 Oracle 데이터베이스를 사용하였습니다.

두번째 프로젝트 기획 부분입니다.

주요 기능으로는 첫번째는 회원관리, 
두번째로는 비동기 방식으로 구현한 날짜별 예약, 
세번째는 숙소 관리,
마지막으로는 인공지능을 활용한 숙소 추천 기능이 있습니다.
개발을 진행하기 앞서 개발 할 주요 기능을 토대로 요구사항 분석서를 작성해 어떤 기능이 필요하고 그 기능에 어떤 요구사항이 있는지 확인 후 
프로젝트를 진행하였고, 테이블 명세서와 FlowChart , ERD를 잡아놓고 시작해 필요할 때에 중간중간 수정해 가며 프로젝트를 진행했습니다.
프로젝트를 진행하며 기능별 세부 분석표를 만들어 각 기능을 만들며 사용했던 요청이나 작업 부분들을 정리했습니다.

세번째 프로젝트 구현 부분입니다.

첫번째로 설명드릴 부분은 비동기 방식으로 구현된 로그인과 회원가입 부분입니다.
로그인은 아이디와 비밀번호를 입력받고 입력받은 값을 비 동기 방식으로 데이터베이스에 저장된 값과 비교해 
로그인 결과를 도출했습니다
회원가입시에는 아이디 중복확인에 비 동기 방식을 채택해 아이디가 사용 가능한 아이디인지 체크를 하고 
사용 가능 시에 회원 가입 버튼이 활성화 되도록 진행했습니다.
다음장은 회원가입의 아이디 중복확인에 사용한 비 동기 방식 코드 입니다.
중복 확인이라는 버튼 클릭시 아이디 값이 설정해놓은 url로 넘어가 컨트롤러에서 값을 비교하고 결과값을
다시 ajax에 전송해 결과에 따라 사용 가능 여부를 출력했습니다.

다음은 인공지능을 활용한 숙소 추천을 구현한 메인페이지 입니다.
상단에는 사용자가 원하는 유형의 숙소를 확인할 수 있는 카테고리 부분입니다
하단부에는 사용자의 나이대에 맞는 숙소의 추천 리스트를 표출해놨습니다.
다음 페이지는 다른 나이대의 사용자가 로그인 했을 때 추천 리스트가 다른 것을 보여주는 페이지입니다.

다음은 숙소 추천 기능을 구현한 내부 코드입니다.
사용자가 로그인을 진행하면 컨트롤러에서 사용자의 아이디를 Flask서버에 전송해 python에서 사용할 수 있도록 진행했습니다.
Flask 서버에서 아이디를 입력 받고 그 아이디에 해당하는 나이 정보를 DB와 연동해 다시 찾습니다.
그리고 전체 예약 내역중 필요한 데이터만 가져와 그 데이터를 지역별 나이대별로 정리했습니다
그 후 사용자의 나이대와 같은 나이대의 예약 내역중 가장 예약이 많은 지역 세 곳을 찾아냅니다
그리고 그 지역의 숙소들 중 랜덤으로 한 숙소씩 선정해 리스트화 하고 컨트롤러에 전송합니다 
그 후 리스트가 정상적으로 넘어왔을 때 모델로 그 리스트를 넘겨 숙소 추천 리스트를 클라이언트에게 출력했습니다.

다음은 숙소 추천시 사용되는 부분으로 각 지역별로 어떤 나이대가 얼마나 예약을 했는지 분석해 시각화한 부분입니다.
이를 토대로 가장 많이 예약 된 지역을 선정해 사용함으로써 숙소 추천 기능에 활용했습니다.

다음은 마이페이지 입니다
사용자 본인의 정보를 확인하고 수정할 수 있고 더 이상 사용하지 않기를 원할 시 탈퇴하는 기능까지 구현했습니다.

숙박업소 리스트 및 검색 부분입니다.
사용자가 선택한 카테고리의 리스트를 출력하고 검색을 원하는 숙소의 숙소 이름을 검색 시 검색 되도록 설정해 두었습니다.

다음은 AJAX를 활용해 날짜 중복이 불가능한 예약 페이지 부분입니다.
숙박업소 리스트 중 원하는 숙소를 선택 시 출력되는 화면이고
사용자가 선택한 숙박업소의 기본 정보를 출력하고 그 옆에는 숙소의 위치를 지도 API를 사용해 지도상에 출력했습니다.
그 하단부에 사용자가 원하는 날짜를 선택 시 그 날짜에 예약이 가능한 그 숙소의 방리스트를 페이지 이동 없이 출력해주었습니다. 
그 부분에 해당하는 비동기 방식의 내부 코드입니다. 
날짜 선택 시 동작하도록 설정해 두었고, 날짜데이터와 예약을 진행할 숙소의 정보를 전송해 예약이 가능한 방의 리스트와 해당 일정의 금액을
리턴해주어 그 리스트를 하단부에 이어 출력하도록 진행했습니다.

방 선택시 방 정보가 뜨고 예약 버튼 클릭 시 방 정보와 입 퇴실 시간, 날짜까지 출력해 사용자가 한눈에 확인할 수 있도록
진행했고, 사용자가 예약을 선택할 시 예약이 완료되며 마이페이지로 넘어갑니다.
그 후 사용자가 예약한 정보를 확인할 수 있고 예약 취소를 가능하도록 해 두었습니다.

여기까지 일반회원이 사용할 수 있는 기능들을 설명드렸고 다음은 사업주 회원의 기능을 간략히 설명드리겠습니다.

사업주 회원도 본인이 소유한 숙박업소가 아닌 경우 일반회원과 같이 예약을 진행할 수 있도록 해두었습니다.
재사용성을 높이기 위해 회원의 유형에 따라 같은 페이지가 다른 기능을 할 수 있도록 처리했습니다.
마이페이지를 들어가보면 똑같이 사업주 회원 본인의 정보도 확인할 수 있도록 해두었고 내 호텔 보기 버튼을 두어 
본인의 숙소들을 편하게 관리할 수 있도록 설정했습니다.
숙소 등록과 방 등록 화면입니다. 각각 필요한 정보를 입력 시 등록이 되도록 진행했고, 숙소를 선택하면
본인의 숙박업소 일 경우 예약은 불가능하고, 방 등록 혹은 숙소 정보 수정, 삭제가 되도록 설정했습니다.
마지막으로는 숙소 추천 시에 사용된 데이터를 표로 만들어 시각화 한 부분입니다.
저희의 데이터를 이용해 그 데이터를 분류해 필요한 데이터만 사용해 이걸 토대로 사용자의 나이정보에 맞는 나이대가 
많이 예약한 지역의 정보를 얻어 그 지역의 숙소를 추천하는 것으로 진행했습니다.

마무리입니다.
추후 업데이트 시 추가 기능으로는
첫번째 숙소 추천 기능이 시간이 촉박해 만족스럽지 않은 부분이 있었는데 좀 더 많은 데이터를 쌓고
그 데이터로 다른 추천이나 데이터 분류를 할 수 있도록 버전 업 하는것이 첫번째이고
두번째로는 저희 예약 프로그램은 결제가 없어 추후 결제 기능을 추가해 사용할 수 있도록 하는것이고
세번째는 아이디가 중복되지 않는다면 한 사용자가 여러 아이디를 생성하는 것도 가능하기에 회원가입에 인증을
추가하는 것이 세번째입니다.

후기로는 일단 팀원과 마음이 잘 맞아 서로 생각한 부분이 비슷해 프로젝트를 진행하는데 불화가 없었고
일정이 길지 않은데 중간에 계속 기능이 추가되어 기간이 더 짧게 느껴졌는데 서로 막히는 부분이 있으면 서로서로 도와
막힌 부분을 오래 걸리지 않고 풀고 진행했습니다.
또 프로젝트를 진행하면서 스프링 프레임워크의 기능을 더 파악할 수 있었고 MVC패턴을 많이 숙지할 수 있었으며
추후에 더 다른 기능들을 구현해보고 싶다는 생각이 들었습니다
이것으로 발표 마치겠습니다 감사합니다.
